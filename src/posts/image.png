<!DOCTYPE html>
<html lang="fr">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" href="/logo.png" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />



		
	<style data-sveltekit>
@import url('https://fonts.googleapis.com/css?family=Poppins&display=swap');
@import url('https://fonts.googleapis.com/icon?family=Material+Icons');
/* Write your global styles here, in PostCSS syntax */
.material-icons {
	font-family: 'Material Icons';
}
html {
	font-family: 'Poppins';
}
:root {
	--blue:#5A8DEE;
	--green:#39DA8A;
	--red:#F26061;	
	--orange: #FDAC42;
	--yellow:#FFCC00;
	--lightblue:#74E0E5;
	--purple:#A85ED6;

	--vh: 100vh;
}
@media (prefers-color-scheme: light){
	:root	{
		--background:rgb(255, 255, 255);
        --compl:rgb(245,245,255);
		--text:#000000;
		--text-reverse:#ffffff;
		--shadow:rgba(0, 0, 0, 0.1);
		--back-quote:rgb(255, 255, 224);
	}
}
@media (prefers-color-scheme: dark){
    :root	{
        --background:rgb(25, 25, 35);
        --compl:rgb(20, 20, 30);
		--text:#ffffff;
		--text-reverse:#000000;
		--shadow:rgba(0, 0, 0, 0.3);
		--back-quote:rgb(50, 40, 20);
	}
}
@media print
{
	html,body{
		height: auto !important;
		overflow: auto !important;
	}

	.no-print	{
		display: none !important;
	}

	main.md {
		height: auto !important;
		padding : 0px !important;
		width : 19cm !important;
	}

	main.md > * {
		/* overflow: hidden !important; */
	}
}
::-webkit-scrollbar{
	width:12px;
	height:12px;
}
::-webkit-scrollbar-thumb{
	border-radius:16px;
	border:4px solid transparent;
	background-clip:content-box;
	background-color: var(--text);
}
html,body{
    all:unset;
	font-family: Poppins;
    color:var(--text);
}
a:link,a:visited {
	color: var(--blue);
	cursor: pointer;
	text-decoration: unset;
}
a:hover {
	color: var(--red);
}
body {
    background-color: var(--background);
	height:var(--vh);
	width: 100vw;

}
main.md > * {
	margin: 0px 0px 16px 0px;
}
main.md img, main.md video {
	max-width : 100%;
	max-height: 372px;
	margin: auto;
    display: block;
}
.katex-display{
	overflow: auto hidden;
}
td, th {
	padding:6px 13px;
	border:1px solid #9c9c9c;
}
table {
	border-collapse: collapse;
	display:block;
	overflow: auto;
}
main.md > pre {
	padding: .7em;
    overflow: auto;
    border-radius: .7em;
	background-color: var(--compl);
}
.hljs .hljs-keyword {
	color:var(--red) !important;
}
.hljs .hljs-title{
	color:var(--yellow) !important;
}
.hljs .hljs-operator, .hljs .hljs-comment{
	color: lightgray !important;
}
.hljs .hljs-number{
	color:var(--purple) !important;
}
.hljs .hljs-built_in{
	color:var(--blue) !important;
}
.hljs .hljs-string{
	color:var(--green) !important;
}
.hljs *, .hljs{
	font-weight: 400 !important;
	font-family: 'Ubuntu Mono', monospace !important;
	font-size: large !important;
}
main.md h1 {
	color:var(--red);
	font-size: 32px;
}
main.md h2 {
	color:var(--green);	
	font-size: 29px;
}
main.md h3 {
	color:var(--blue);	
	font-size: 26px;
}
main.md h4 {
	color:var(--purple);
	font-size: 23px;
}
main.md h5 {
	color:var(--orange);
	font-size: 20px;
}
main.md h6 {
	color:var(--lightblue);
	font-size: 17px;
}
header, h1, h2, h3, h4, h5, h6{
	text-decoration: underline;
}
main.md blockquote {
	border: 1px solid var(--yellow);
	border-left: 7.5px solid var(--yellow);
	padding: 0 15px;
	border-radius: 0 0.75em 0.75em 0;
	color:var(--yellow) !important;
	background-color: var(--back-quote);
}
red {
	color:var(--red);
}
blue {
	color:var(--blue);
}
orange {
	color:var(--orange);
}
yellow {
	color:var(--yellow);
}
purple {
	color:var(--purple);
}
lightblue {
	color:var(--lightblue);
}
green {
	color:var(--green);
}
div.app.s-7IPF32Wcq3s8{display:flex;flex-direction:column;gap:1em}#content.s-7IPF32Wcq3s8{overflow:auto;width:clamp(100px,calc(100% - 40px),19cm);margin:0 25%;min-height:calc(100vh - 12.5em)}.s-7IPF32Wcq3s8{}
nav.s-6t0zidZTtq_e.s-6t0zidZTtq_e{display:grid;grid-template-columns:5em 10em 1fr;height:5em;align-items:center;gap:1em;padding:1em;background-color:var(--compl);position:sticky;top:0;left:0}nav.s-6t0zidZTtq_e img.s-6t0zidZTtq_e{height:5em;border-radius:15em}nav.s-6t0zidZTtq_e ul.s-6t0zidZTtq_e,nav.s-6t0zidZTtq_e ul li.s-6t0zidZTtq_e{all:unset}nav.s-6t0zidZTtq_e ul.s-6t0zidZTtq_e{display:flex;width:100%}nav.s-6t0zidZTtq_e ul li a.s-6t0zidZTtq_e{padding:1em;text-align:center;transition:0.2s}.s-6t0zidZTtq_e.s-6t0zidZTtq_e{}
footer.s-GeZhUIMHXOeE{padding:1em;height:1.5em;background-color:var(--compl)}.s-GeZhUIMHXOeE{}</style><title>Tom Chauvel</title><!-- HEAD_svelte-3feexy_START --><meta name="description" content="Site de Tom Chauvel / AquaBx, étudiant à l'ESIR à Rennes." class="s-7IPF32Wcq3s8"><!-- HEAD_svelte-3feexy_END -->	
	</head>
	<body>
		<div style="display: contents">
			   <div class="app s-7IPF32Wcq3s8"><nav class="s-6t0zidZTtq_e"><img src="/logo.png" class="s-6t0zidZTtq_e"> <h1 class="s-6t0zidZTtq_e" data-svelte-h="svelte-8848a6">AquaBx</h1> <ul class="s-6t0zidZTtq_e"><li class="s-6t0zidZTtq_e"><a href="/" class="s-6t0zidZTtq_e" data-svelte-h="svelte-5a0zws">Home</a></li> <li class="s-6t0zidZTtq_e"><a href="/blog" class="s-6t0zidZTtq_e" data-svelte-h="svelte-yeotq9">Mes Projets</a></li> <li class="s-6t0zidZTtq_e"><a href="/photos" class="s-6t0zidZTtq_e" data-svelte-h="svelte-15hw0ye">Mes Photos</a></li> <li class="s-6t0zidZTtq_e"><a href="/contact" class="s-6t0zidZTtq_e" data-svelte-h="svelte-1n9jr7">Contact</a></li></ul> </nav> <div id="content" class="s-7IPF32Wcq3s8"><h1>404</h1> <p>Not Found</p></div> <footer class="s-GeZhUIMHXOeE">Copyright © 2018-2023 <a href="https://www.aquabx.ovh" class="text-[#3282B8] hover:text-[#EE6F57] transition-colors s-GeZhUIMHXOeE" data-svelte-h="svelte-swpddv">AquaBx</a>. Tous droits réservés
</footer> </div> 
			
			<script>
				{
					__sveltekit_dev = {
						base: new URL("..", location).pathname.slice(0, -1),
						env: {}
					};

					const element = document.currentScript.parentElement;

					const data = [null,null];

					Promise.all([
						import("/@fs/D:/GitRepo/website/node_modules/@sveltejs/kit/src/runtime/client/start.js"),
						import("/@fs/D:/GitRepo/website/.svelte-kit/generated/client/app.js")
					]).then(([kit, app]) => {
						kit.start(app, element, {
							node_ids: [0, 1],
							data,
							form: null,
							error: {message:"Not Found"},
							status: 404
						});
					});
				}
			</script>
		
		</div>
	</body>	
</html>
