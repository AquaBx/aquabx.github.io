---
import FormattedDate from "./FormattedDate.astro";
import Tag from "./Tag.astro";

const {post} = Astro.props
---

<div class="block px-6 py-4 bg-gray-200 border rounded-3xl shadow w-full">
    <div class="flex flex-wrap items-center gap-2">
      <h5 class="text-2xl font-bold tracking-tight text-primary-900 pb-2">
        {post.data.name}
      </h5>
      {post.data.location && <h4 class="text-sm">{post.data.location}</h4>}

      {post.data.repository ? (
        <a target="blank" 
          class="text-sm text-primary-500 hover:underline"
          href={post.data.repository}
        >
          Repository ↗
        </a>
      ) : (
        ""
      )}
      {post.data.homepage ? (
        <a target="blank" 
          class="text-sm text-blue-500 hover:underline"
          href={post.data.homepage}
        >
          Homepage ↗
        </a>
      ) : (
        ""
      )}
    </div>

    {/* {[(post.render()).Content].map((Poste)=>{return Poste ?  <Poste></Poste> : ""})} */}
    <div class="block">
      {post.data.tags && post.data.tags.sort().map((t: string) => {
        return <Tag icon={t} />;
      })}
    </div>

    <p class="text-xs m-0 mt-4 text-gray-900">
      { (post.data.startDate && post.data.endDate) && <p>From <FormattedDate date={post.data.startDate} /> to <FormattedDate date={post.data.endDate} /> </p> }
      { (post.data.startDate && !post.data.endDate) && <p>Since <FormattedDate date={post.data.startDate} /></p> }
      { (!post.data.startDate && post.data.endDate) && <p>Until <FormattedDate date={post.data.endDate} /></p> }
    </p>
  </div>